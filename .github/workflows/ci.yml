name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly to catch dependency issues
    - cron: '0 8 * * 1'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --extra dev
    
    - name: Check code formatting with black
      run: |
        uv run black --check src/ tests/
    
    - name: Check import sorting with isort
      run: |
        uv run isort --check-only src/ tests/
    
    - name: Lint with flake8
      run: |
        uv run flake8 src/ tests/
      continue-on-error: true  # Allow some linting issues for now
    
    - name: Type check with mypy
      run: |
        uv run mypy src/
      continue-on-error: true  # Allow type errors for now
    
    - name: Run unit tests
      run: |
        uv run pytest tests/unit/ -v --tb=short
      continue-on-error: true  # Allow some test failures for now
    
    - name: Run integration tests
      run: |
        uv run pytest tests/integration/ -v --tb=short
      continue-on-error: true  # Allow some test failures for now
    
    - name: Run all tests with coverage
      run: |
        uv run pytest tests/ --cov=src/promptrek --cov-report=xml --cov-report=term-missing
      continue-on-error: true  # Allow some test failures for now
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v1
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install security tools
      run: |
        uv add --extra dev bandit safety
        uv sync --extra dev
    
    - name: Run bandit security linter
      run: |
        uv run bandit -r src/ -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Run safety check
      run: |
        uv run safety check
      continue-on-error: true

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v1
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: |
        uv sync --extra dev
    
    - name: Test CLI help commands
      run: |
        uv run promptrek --help
        uv run promptrek init --help
        uv run promptrek validate --help
        uv run promptrek generate --help
