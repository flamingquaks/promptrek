name: Validate PR Title Format

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  validate-pr-title:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install commitlint
        run: npm install @commitlint/cli @commitlint/config-conventional

      - name: Validate PR title (future commit message)
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "Validating PR title: $PR_TITLE"
          echo "This will be the squashed commit message when merged."
          
          # Validate the PR title against our commitlint config
          echo "$PR_TITLE" | npx commitlint

      - name: Report validation result
        if: success()
        run: |
          echo "✅ PR title follows conventional commit format"
          echo "When this PR is squashed and merged, it will create a valid commit message."

      - name: Report validation failure
        if: failure()
        run: |
          echo "❌ PR title does not follow conventional commit format"
          echo ""
          echo "Please update your PR title to follow the format: type: description"
          echo ""
          echo "Valid types: feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert"
          echo ""
          echo "Examples:"
          echo "  • feat: add user authentication system"
          echo "  • fix: resolve memory leak in parser"
          echo "  • docs: update installation instructions"
          echo ""
          echo "This ensures clean commit messages in the main branch for automated changelog generation."
          exit 1
